{"version":3,"sources":["images/react-movie-logo.svg","images/tmdb_logo.svg","components/Header/Header.styles.js","components/Header/index.js","config.js","components/HeroImage/HeroImage.styles.js","components/HeroImage/index.js","components/Grid/Grid.styles.js","components/Grid/index.js","components/Thumb/Thumb.styles.js","components/Thumb/index.js","components/Spinner/index.js","components/Spinner/Spinner.styles.js","images/search-icon.svg","components/SearchBar/SearchBar.styles.js","components/SearchBar/index.js","components/Button/Button.styles.js","components/Button/index.js","API.js","hooks/useHomeFetch.js","images/no_image.jpg","components/Home.js","components/BreadCrumb/BreadCrumb.styles.js","components/BreadCrumb/index.js","components/MovieInfo/MovieInfo.styles.js","components/MovieInfo/index.js","helpers.js","components/MovieInfoBar/MovieInfoBar.styles.js","components/MovieInfoBar/index.js","components/Actor/Actor.styles.js","components/Actor/index.js","components/Movie.js","hooks/useMovieFetch.js","components/NotFound.js","GlobalStyle.js","App.js","index.js"],"names":["Wrapper","styled","div","Content","LogoImg","img","TMBDLogoImg","Header","to","src","RMDBLogo","alt","TMDBLogo","API_URL","API_KEY","process","SEARCH_BASE_URL","POPULAR_BASE_URL","REQUEST_TOKEN_URL","LOGIN_URL","SESSION_ID_URL","IMAGE_BASE_URL","BACKDROP_SIZE","POSTER_SIZE","props","image","Text","HeroImage","title","text","Grid","header","children","Image","Thumb","movieId","clickable","Spinner","SearchBar","setSearchTerm","useState","state","setState","initial","useRef","useEffect","current","timer","setTimeout","clearTimeout","searchIcon","type","placeholder","onChange","event","currentTarget","value","button","Button","callback","onClick","defaultConfig","method","headers","apiSettings","fetchMovies","searchTerm","page","a","endpoint","fetch","json","fetchMovie","fetchCredits","creditsEndpoint","getRequestToken","reqToken","request_token","authenticate","requestToken","username","password","bodyData","body","JSON","stringify","success","sessionId","rateMovie","rating","initialState","results","total_pages","total_results","Home","loading","setLoading","error","setError","isLoadingMore","setIsLoadingMore","API","movies","previousState","useHomeFetch","console","log","backdrop_path","original_title","overview","map","movie","poster_path","NoImage","id","BreadCrumb","movieTitle","backdrop","MovieInfo","className","vote_average","directors","length","director","name","credit_id","calcTime","time","hours","Math","floor","mins","convertMoney","money","Intl","NumberFormat","style","currency","minimumFractionDigits","format","MovieInfoBar","budget","revenue","Actor","character","imageUrl","Movie","credits","crew","filter","member","job","actors","cast","useMovieFetch","useParams","runtime","actor","profile_path","NotFound","GlobalStyle","createGlobalStyle","App","path","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8384a63c.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/react-movie-logo.42955eb6.svg\";","export default __webpack_public_path__ + \"static/media/tmdb_logo.f15b6632.svg\";","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n    background: var(--darkGrey);\n    padding: 0 20px;    \n`;\n\nexport const Content = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    padding: 20px 0;\n    margin: 0 auto;\n    max-width: var(--maxWidth);\n`;\n\nexport const LogoImg = styled.img`\n    width: 200px;\n    @media screen and (max-width: 500px){\n        width: 150px;\n    }\n`;\n\nexport const TMBDLogoImg = styled.img`\n    width: 100px;\n    @media screen and (max-width: 500px){\n        width: 80px;\n    }\n`;","\nimport {Link} from 'react-router-dom'\n\nimport RMDBLogo from '../../images/react-movie-logo.svg';\nimport TMDBLogo from '../../images/tmdb_logo.svg';\n\nimport { Wrapper, Content, LogoImg, TMBDLogoImg } from './Header.styles';\n\nconst Header = ()=> (\n    <Wrapper>\n        <Content>\n            <Link to='/' >\n            <LogoImg src={RMDBLogo} alt='rmdb-logo'/>\n            </Link>\n\n            <TMBDLogoImg src={TMDBLogo} alt='tmdb-logo'/>\n        </Content>  \n    </Wrapper>\n)\n\nexport default Header;","// Configuration for TMDB API\n// Read more about the API here: https://developers.themoviedb.org/\n\nconst API_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = process.env.REACT_APP_API_KEY;\n\nconst SEARCH_BASE_URL = `${API_URL}search/movie?api_key=${API_KEY}&language=en-US&query=`;\nconst POPULAR_BASE_URL = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US`;\n// For login and voting\nconst REQUEST_TOKEN_URL = `${API_URL}authentication/token/new?api_key=${API_KEY}`;\nconst LOGIN_URL = `${API_URL}authentication/token/validate_with_login?api_key=${API_KEY}`;\nconst SESSION_ID_URL = `${API_URL}authentication/session/new?api_key=${API_KEY}`;\n\nconst IMAGE_BASE_URL = 'http://image.tmdb.org/t/p/';\n// Sizes: w300, w780, w1280, original\nconst BACKDROP_SIZE = 'w1280';\n// w92, w154, w185, w342, w500, w780, original\nconst POSTER_SIZE = 'w780';\n\nexport {\n  SEARCH_BASE_URL,\n  POPULAR_BASE_URL,\n  API_URL,\n  API_KEY,\n  IMAGE_BASE_URL,\n  BACKDROP_SIZE,\n  POSTER_SIZE,\n  REQUEST_TOKEN_URL,\n  LOGIN_URL,\n  SESSION_ID_URL,\n};\n","import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n    background: linear-gradient(\n        to bottom, rgba(0, 0, 0, 0)\n        41%, rgba(0, 0, 0, 0.65)\n        100%\n    ),\n    url(${props => props.image}), var(--darkGrey);\n    background-size: 100%; /* cover */\n    background-position: center;\n    height: 600px;\n    position: relative;\n    animation: animateHeroImage 1s;\n\n    @keyframes animateHeroImage {\n        from {\n            opacity: 0;\n        }\n        to { \n            opacity: 1; \n        }\n    }\n`;\n\nexport const Content = styled.div`\n    padding: 20px;\n    max-width: var(--maxWidth);\n    margin: 0 auto;\n`;\n\nexport const Text = styled.div`\n    z-index:100;\n    maxWidth: 700px;\n    position: absolute;\n    bottom: 40px;\n    margin-right: 20px;\n    min-height: 100px;\n    color: var(--white);\n\n    h1{\n        font-size: var(--fontSuperBig);\n\n        @media screen and (max-width: 720px){\n            font-size: var(--fontBig);\n        }\n    }\n\n    p{\n        font-size: var(--fontMed);\n\n        @media screen and (max-width: 720px){\n            font-size: var(--fontSmall);\n        }\n    }\n\n    @media screen and (max-width: 720px){\n        max-width: 100%;\n    }\n`;","\n\n//styles\nimport { Wrapper, Content, Text } from './HeroImage.styles';\n\nconst HeroImage = (props) =>( //en lugar de poner \"props\" aquí, podríamos desestructurar y poner solamente ({image, title, text}) y nos ahorraríamos escribir \"props\" cada vez más abajo.\n                                                                \n    <Wrapper image={props.image}>\n        <Content>\n            <Text>\n                <h1>{props.title}</h1>\n                <p>{props.text}</p>\n            </Text>\n        </Content>\n    </Wrapper>\n);\n\nexport default HeroImage;\n\n","import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n    max-width: var (--max-width);\n    margin: 0 auto;\n    padding: 0 20px;\n\n    h1{\n        color: var(--medGrey);\n\n        @media screen and (max-width: 768px){\n            font-size: var(--fontBig);\n        }\n    }\n`;\n\nexport const Content = styled.div`\n    display: grid;\n    grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n    grid-gap: 2rem;\n`;","import React from \"react\";\n//styles\nimport {Wrapper, Content } from './Grid.styles'\n\n\nconst Grid = ({ header, children }) => (\n    \n    \n    <Wrapper>\n        <h1>{header}</h1>\n        <Content>{children}</Content>\n    </Wrapper>\n)\n\nexport default Grid;","import styled from \"styled-components\";\n\nexport const Image = styled.img`\n  width: 100%;\n  max-width: 720px;\n  transition: all 0.3s;\n  object-fit: cover;\n  border-radius: 20px;\n  animation: animateThumb 0.5s;\n\n  :hover{\n    opacity: 0.8;\n  }\n\n  @keyframes animateThumb {\n    from {\n      opacity: 0;\n    }\n    to {\n      opacity: 1;\n    }\n  }\n`;\n","import React from 'react'\nimport {Link} from 'react-router-dom'\n// Styles\nimport { Image } from './Thumb.styles'\n\nconst Thumb = ({ image, movieId, clickable }) => (\n    <div>\n    {clickable?(\n        <Link to={`/${movieId}`}>\n        <Image src= {image} alt= 'movie-thumb'/>;\n        </Link>\n        ):(\n        <Image src= {image} alt= 'movie-thumb'/>\n        )}\n\n        \n\n    </div>\n);\n\nexport default Thumb;\n\n","\nimport { Spinner } from './Spinner.styles'\n\nexport default Spinner;","import styled from \"styled-components\";\n\n export const Spinner = styled.div`\n    border: 5px solid var(--lightGrey);\n    border-top: 5px solid var(--medGrey);\n    border-radius: 50%;\n    width: 50px;\n    height: 50px;\n    animation: spin 0.8s linear infinite;\n    margin: 20px auto;\n\n    @keyframes spin {\n        0%{\n            transform: rotate(0deg);\n        }\n        100%{\n            transform: rotate(360deg);\n        }\n    }\n `;","export default __webpack_public_path__ + \"static/media/search-icon.cd820f5a.svg\";","import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n    display: flex;\n    align-items: center;\n    height: 100%;\n    background: var(--darkGrey);\n    padding: 0 20px;\n`;\n\nexport const Content = styled.div`\n    position: relative;\n    max-width: var(--maxWidth);\n    width: 100%;\n    height: 55px;\n    background: var(--medGrey);\n    border-radius: 40px;\n    color: var(--white);\n    margin: 0 auto;\n\n    img{\n        position: absolute;\n        left: 15px;\n        top: 14px;\n        width: 30px;\n    };\n\n    input{\n        font-size: var(--fontBig);\n        position: absolute;\n        left: 0;\n        margin: 8px 0;\n        padding: 0 0 0 60px;\n        border: 0;\n        width: 95%;\n        background: transparent;\n        height: 40px;\n        color: var(--white);\n\n        :focus{\n            outline: none;\n        };\n    };\n`;","import React, { useState, useEffect, useRef } from 'react';\n\n//image of the icon \nimport searchIcon from '../../images/search-icon.svg';\n\n//Styles\nimport { Wrapper, Content } from './SearchBar.styles';\n\nconst SearchBar = ({ setSearchTerm }) => {\n    const [state, setState] = useState('')\n    const initial = useRef(true);//Este hook nos retorna un objeto con una propiedad current que es mutable y cuyo valor persiste durante los renderizados y ciclo de vida del componente.\n    \n    useEffect(()=>{ //retrasa el hook useHomeFetch medio segundo\n\n        if(initial.current){//si el valor es false se ejecutará el resto del código o sea, si no es el primer renderizado.\n            initial.current = false;\n            return;\n        }\n        const timer = setTimeout(()=>{\n            setSearchTerm(state);\n        }, 500)\n\n        return ()=> clearTimeout(timer)//limpia el intérvalo para que no se creen múltiples intérvalos.\n    },[setSearchTerm, state])\n\n    return(\n        <Wrapper>\n            <Content>\n                <img src= {searchIcon} alt='search-icon'/>\n                <input \n                    type='text' \n                    placeholder='Search Movie'\n                    onChange= {event => setState(event.currentTarget.value)}\n                    value={state}\n\n                />\n            </Content>\n        </Wrapper>\n    )\n\n}\n\nexport default SearchBar;\n\n\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.button`\n    display: block;\n    background: var(--darkGrey);\n    width: 25%;\n    min-width: 200px;\n    height: 60px;\n    border-radius: 30px;\n    color: var(--white);\n    border: 0;\n    font-size: var(--fontBig);\n    margin: 20px auto;\n    transition: all 0.3s;\n    outline: none;\n    cursor: pointer;\n\n    :hover{\n        opacity: 0.8;\n    }\n`;","import React from 'react'\n\n//styles \nimport {Wrapper} from './Button.styles'\n\nconst Button = ({ text, callback }) => (\n    <Wrapper type=\"button\" onClick={callback}>\n        {text}\n    </Wrapper>\n)\n\nexport default Button","import {\n  SEARCH_BASE_URL,\n  POPULAR_BASE_URL,\n  API_URL,\n  API_KEY,\n  REQUEST_TOKEN_URL,\n  LOGIN_URL,\n  SESSION_ID_URL\n} from './config';\n\nconst defaultConfig = {\n  method: 'POST',\n  headers: {\n    'Content-Type': 'application/json'\n  }\n};\n\nconst apiSettings = {\n  fetchMovies: async (searchTerm, page) => {\n    const endpoint = searchTerm //¿hay un término de búsqueda?\n      ? `${SEARCH_BASE_URL}${searchTerm}&page=${page}`//para todas las peliculas\n      : `${POPULAR_BASE_URL}&page=${page}`;//para las más populares\n    return await (await fetch(endpoint)).json();//un await para el endpoint, otro para convertir el resultado a json\n  },\n  fetchMovie: async movieId => {\n    const endpoint = `${API_URL}movie/${movieId}?api_key=${API_KEY}`;\n    return await (await fetch(endpoint)).json();\n  },\n  fetchCredits: async movieId => {\n    const creditsEndpoint = `${API_URL}movie/${movieId}/credits?api_key=${API_KEY}`;\n    return await (await fetch(creditsEndpoint)).json();\n  },\n  // Bonus material below for login\n  getRequestToken: async () => {\n    const reqToken = await (await fetch(REQUEST_TOKEN_URL)).json();\n    return reqToken.request_token;\n  },\n  authenticate: async (requestToken, username, password) => {\n    const bodyData = {\n      username,\n      password,\n      request_token: requestToken\n    };\n    // First authenticate the requestToken\n    const data = await (\n      await fetch(LOGIN_URL, {\n        ...defaultConfig,\n        body: JSON.stringify(bodyData)\n      })\n    ).json();\n    // Then get the sessionId with the requestToken\n    if (data.success) {\n      const sessionId = await (\n        await fetch(SESSION_ID_URL, {\n          ...defaultConfig,\n          body: JSON.stringify({ request_token: requestToken })\n        })\n      ).json();\n      return sessionId;\n    }\n  },\n  rateMovie: async (sessionId, movieId, value) => {\n    const endpoint = `${API_URL}movie/${movieId}/rating?api_key=${API_KEY}&session_id=${sessionId}`;\n\n    const rating = await (\n      await fetch(endpoint, {\n        ...defaultConfig,\n        body: JSON.stringify({ value })\n      })\n    ).json();\n\n    return rating;\n  }\n};\n\nexport default apiSettings;\n","import { useState, useEffect } from 'react'\n//API \nimport API from '../API';\n\nconst initialState = {\n    page: 0,\n    results: [],\n    total_pages: 0,\n    total_results: 0\n}\n\nexport const useHomeFetch = ()=>{\n    const [state, setState]= useState(initialState);\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(false);\n    const [searchTerm, setSearchTerm] = useState('');\n    const [isLoadingMore, setIsLoadingMore] = useState(false);\n\n    const fetchMovies = async (page, searchTerm = '')=>{\n        try {\n          setError(false);\n          setLoading(true);\n\n          const movies = await API.fetchMovies(searchTerm, page);\n          //console.log(movies);\n\n          setState((previousState) => ({\n            ...movies,\n            results:\n              page > 1\n                ? [...previousState.results, ...movies.results]\n                : [...movies.results],\n          }));\n        } catch (error) {\n          setError(true);\n        }\n        setLoading(false);\n\n        \n    };\n\n    //render inicial y para la búsqueda\n    useEffect(() => {\n        setState(initialState);\n        fetchMovies(1, searchTerm);//el \"1\" es porque solo queremos la primera pagina\n    }, [searchTerm])//indicamos que, cuando cambie el estado de searchterm, se disparará el useEffect.\n\n    //Load More Movies\n    useEffect(() => {\n      if(!isLoadingMore) return {/*si no está cargando más retorna*/}\n      \n      fetchMovies(state.page + 1, searchTerm);\n      setIsLoadingMore(false);\n      \n    }, [isLoadingMore, state.page, searchTerm])\n    return { state, loading, error, setSearchTerm, searchTerm, setIsLoadingMore };\n}","export default __webpack_public_path__ + \"static/media/no_image.22d2aa4d.jpg\";","//import some configs from config\nimport { POSTER_SIZE, BACKDROP_SIZE, IMAGE_BASE_URL } from \"../config\";\n\n//components\nimport HeroImage from \"./HeroImage\";\nimport Grid from \"./Grid\";\nimport Thumb from \"./Thumb\";\nimport Spinner from \"./Spinner\";\nimport SearchBar from \"./SearchBar\";\nimport Button from \"./Button\";\n\n//hook\nimport { useHomeFetch } from \"../hooks/useHomeFetch\";\n\n//Image\nimport NoImage from \"../images/no_image.jpg\";\n\nconst Home = () => {\n  const { state, loading, error, searchTerm, setSearchTerm, setIsLoadingMore } =\n    useHomeFetch();\n\n  console.log(state);\n\n  if (error) return <div>Something went wrong...</div>;\n\n  return (\n    <>\n      {!searchTerm && state.results[0] ? ( //no tenemos un searchTerm y sí que tenemos un elemento en el array de películas.\n        <HeroImage\n          image={`${IMAGE_BASE_URL}${BACKDROP_SIZE}${state.results[0].backdrop_path}`}\n          title={state.results[0].original_title}\n          text={state.results[0].overview}\n        />\n      ) : null}\n      <SearchBar setSearchTerm={setSearchTerm} />\n      <Grid header={searchTerm ? \"Search Results\" : \"Popular Movies\"}>\n        {state.results.map((movie) => (\n          <Thumb\n            key={movie.id}\n            clickable\n            image={\n              movie.poster_path\n                ? IMAGE_BASE_URL + POSTER_SIZE + movie.poster_path\n                : NoImage\n            }\n            movieId={movie.id}\n          />\n        ))}\n      </Grid>\n      {loading && <Spinner />}{\" \"}\n      {/* comprueba que estamos cargando y si es así enseñamos el spinner */}\n      {state.page < state.total_pages && !loading && (\n        <Button text=\"Load More\" callback={()=> setIsLoadingMore(true)}/> /* comprueba que la página en la que estamos es menor que el total de páginas y que no estamos cargando, si se cumple enseñamos el botón */\n      )}\n    </>\n  );\n};\n\nexport default Home;\n","import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    width: 100%;\n    height: 70px;\n    background: var(--medGrey);\n    color: var(--white);\n`;\n\nexport const Content = styled.div`\n    content: flex;\n    width: 100%;\n    max-width: var(--maxWidth);\n    padding: 0 20px;\n    span{\n        font-size: var(--fontMed);\n        color: var(--white);\n        padding-right: 10px;\n\n        @media screen and (max-width: 768px) {\n            font-size: var(--fontSmall);\n        }\n    }\n\n`;","import React from 'react'\nimport {Link} from 'react-router-dom';\n\n//styles\nimport {Wrapper, Content} from './BreadCrumb.styles';\n\nconst BreadCrumb = ({ movieTitle }) => (\n  <Wrapper>\n    <Content>\n      <Link to=\"/\">\n        <span>Home</span>\n      </Link>\n\n      <span> | </span>\n\n      <span>{movieTitle}</span>\n    </Content>\n  </Wrapper>\n);\n\nexport default BreadCrumb;","import styled from \"styled-components\";\nimport { IMAGE_BASE_URL, BACKDROP_SIZE } from \"../../config\";\n\nexport const Wrapper = styled.div`\n  background: ${({ backdrop }) =>\n    backdrop ? `url('${IMAGE_BASE_URL}${BACKDROP_SIZE}${backdrop}')` : \"#000\"};\n  background-size: cover;\n  background-position: center;\n  padding: 40px 20px;\n  animation: animateMovieInfo 1s;\n\n  @keyframes animateMovieInfo{\n      from {\n          opacity: 0;\n      }\n      to{\n          opacity: 1;\n      }\n  }\n`;\n\nexport const Content = styled.div`\n    display: flex;\n    max-width: var(--maxWidth);\n    margin: 0 auto;\n    background: rgba(0, 0, 0, 0.7);\n    border-radius: 25px;\n\n    @media screen and (max-width: 768px){\n        display: block;\n        max-height: none;\n    }\n`;\n\nexport const Text = styled.div`\n    width: 100%;\n    padding: 20px 40px;\n    color: var(--white);\n    overflow: hidden;\n\n    .rating-directors{\n        display: flex;\n        justify-content: flex-start;\n    }\n\n    .score{\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        width: 35px;\n        height: 35px;\n        background: #fff;\n        color: #000;\n        font-weight: 800;\n        border-radius: 10px;\n        margin: 0;\n    }\n\n    .director{\n        margin: 0 0 0 40px;\n        .p{\n            margin: 0;\n        }\n    }\n\n\n    @media screen and (max-width:768px){\n        font-size: var(--fontBig);\n        .rating-directors{\n        display: flex;\n        justify-content: center;\n\n    }\n    .director{\n        margin: 0 0 0 90px;\n        .p{\n            margin: 0;\n        }\n    }\n    .score{\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        width: 35px;\n        height: 30px;\n        background: #fff;\n        color: #000;\n        font-weight: 600;\n        border-radius: 10px;\n        margin: 0;\n    }\n    }\n`;\n","import React from 'react'\n//components\nimport Thumb from '../Thumb'\n//config\nimport { IMAGE_BASE_URL, POSTER_SIZE } from '../../config'\n//image\nimport NoImage from \"../../images/no_image.jpg\";\n//styles\nimport { Wrapper, Content, Text } from './MovieInfo.styles'\n\nconst MovieInfo = ({ movie }) =>(\n    <Wrapper backdrop={movie.backdrop_path}>\n    <Content>\n        <Thumb\n        image={\n            movie.poster_path\n            ? `${IMAGE_BASE_URL}${POSTER_SIZE}${movie.poster_path}`\n            : NoImage\n        }\n        clickable={false}\n        />\n        <Text>\n            <h1>{movie.title}</h1>\n            <h3>PLOT</h3>\n            <p>{movie.overview}</p>\n\n            <div className=\"rating-directors\">\n            <div>\n                <h3>RATING</h3>\n                <div className=\"score\">{movie.vote_average}</div>\n            </div>\n            <div className= 'director'>\n                <h3>DIRECTOR{movie.directors.length > 1? 'S': ''}</h3>\n                {movie.directors.map(director =>(\n                    <p key={director.credit_id}>{director.name}</p>\n                ))}\n            </div>\n\n            </div>\n\n        </Text>\n    </Content>\n    </Wrapper>\n)\n\nexport default MovieInfo;","// Convert time to hours and minutes\nexport const calcTime = time => {\n  const hours = Math.floor(time / 60);\n  const mins = time % 60;\n  return `${hours}h ${mins}m`;\n};\n// Convert a number to money formatting\nexport const convertMoney = money => {\n  const formatter = new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'USD',\n    minimumFractionDigits: 0,\n  });\n  return formatter.format(money);\n};\n","import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n    display: flex;\n    align-items: center;\n    min-height: 100px;\n    background: var(--darkGrey);\n    padding: 0 20px;\n\n`;\n\nexport const Content = styled.div`\n    display: flex;\n    max-width: var(--maxWidth);\n    width: 100%;\n    margin: 0 auto;\n\n    .column{\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        background: var(--medGrey);\n        border-radius: 20px;\n        margin: 0 20px;\n        flex: 1;\n\n        :first-child{\n            margin-left: 0;\n        }\n        :last-child{\n            margin-right: 0;\n        }\n    }\n\n    @media screen and (max-width: 768px){\n        display: block;\n\n        .column{\n            margin: 25px 40px;\n            :first-child{\n            margin: 25px 40px;\n        }\n            :last-child{\n            margin: 25px 40px;\n        }\n        }\n    }\n`;","import React from \"react\";\n//helpers\nimport { calcTime, convertMoney } from \"../../helpers\";\n//styles\nimport { Wrapper, Content } from \"./MovieInfoBar.styles\";\n\nconst MovieInfoBar = ({ time, budget, revenue }) => (\n  <Wrapper>\n    <Content>\n      <div className=\"column\">\n        <p>Running Time: {calcTime(time)}</p>\n      </div>\n      <div className=\"column\">\n        <p>Budget: {convertMoney(budget)}</p>\n      </div>\n      <div className=\"column\">\n        <p>Revenue: {convertMoney(revenue)}</p>\n      </div>\n    </Content>\n  </Wrapper>\n);\n\nexport default MovieInfoBar;","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n    color: var(--white);\n    background: var(--darkGrey);\n    border-radius: 20px;\n    padding: 5px;\n    text-align: center;\n\n    h3{\n        margin: 10px 0 0 0;\n    }\n    p{\n        margin: 5px 0;\n    }\n`;\n\nexport const Image = styled.img`\n    display: block;\n    width: 100%;\n`;","import React from 'react';\n//styles\nimport { Wrapper, Image } from './Actor.styles';\n\nconst Actor = ({ name, character, imageUrl }) => ( //return implícito.\n    <Wrapper>\n        <Image src={imageUrl} alt='actor-thumb'/>\n        <h3>{name}</h3>\n        <p>{character}</p>\n    </Wrapper>\n);\n\nexport default Actor;","import React from \"react\";\nimport { useParams } from \"react-router-dom\";\n//config\nimport { IMAGE_BASE_URL, POSTER_SIZE } from \"../config\";\n\n//components\nimport Grid from \"./Grid\";\nimport Spinner from \"./Spinner\";\nimport BreadCrumb from \"./BreadCrumb\";\nimport MovieInfo from \"./MovieInfo\";\nimport MovieInfoBar from \"./MovieInfoBar\";\nimport Actor from \"./Actor\";\n//hook\nimport { useMovieFetch } from \"../hooks/useMovieFetch\";\n//image\nimport NoImage from \"../images/no_image.jpg\";\n\nconst Movie = () => {\n  const { movieId } = useParams();\n  const { state: movie, loading, error } = useMovieFetch(movieId);\n\n  if (loading) return <Spinner />;\n  if (error) return <div>Something went wrong...</div>;\n\n  return (\n    <>\n      <BreadCrumb movieTitle={movie.original_title} />\n      <MovieInfo movie={movie} />\n      <MovieInfoBar\n        time={movie.runtime}\n        budget={movie.budget}\n        revenue={movie.revenue}\n      />\n      <Grid header=\"Actors\">\n        {/* el header es una prop que sirve para el título del grid en cuestión */}\n        {\n          (movie.actors.map((actor) => (\n            <Actor\n              key={actor.credit_id}\n              name={actor.name}\n              character={actor.character}\n              imageUrl={\n                actor.profile_path\n                  ? `${IMAGE_BASE_URL}${POSTER_SIZE}${actor.profile_path}`\n                  : NoImage\n              }\n            />\n          )))\n        }\n      </Grid>\n    </>\n  );\n};\n\nexport default Movie;\n","import { useState, useEffect } from \"react\";\nimport API from '../API';\n\nexport const useMovieFetch = (movieId) => {\n    const [state, setState] = useState({});\n    const [loading, setLoading] = useState(true);// este componente va a empezar haciendo un fetch así que loading va a ser true.\n    const [error, setError] = useState(false);\n\n    useEffect(() => {\n        const fetchMovie = async () => {\n            try {\n                setLoading(true);\n                setError(false);\n\n                const movie = await API.fetchMovie(movieId);\n                const credits = await API.fetchCredits(movieId);\n\n                //get directors Only\n                const directors = credits.crew.filter(//crew es lo que recibimos y solo queremos los directores.\n                    member => member.job === 'Director'\n                );\n\n                setState({//creamos un objeto que tiene movie y su información, actors y directors t lo metemos en el estado.\n                    ...movie,\n                    actors: credits.cast, //aquí estamos metiendo los actores, que también están en el fetch de fetchCredits, que hemos asignado a la variable credits.\n                    directors: directors //le incluimos también los directores.\n                })\n                setLoading(false);\n            } catch (error) {\n                setError(true)\n            };\n        };\n        \n        fetchMovie()\n    }, [ movieId ])\n    return { state, loading, error };\n};","import React from 'react'\n\nconst NotFound = ()=>{\n    <div>NotFound</div>\n};\n\nexport default NotFound;","import { createGlobalStyle } from 'styled-components'\n\nexport const GlobalStyle = createGlobalStyle`\n    :root{\n        --maxWidth: 1280px;\n        --white: #fff;\n        --lightGrey: #eee;\n        --medGrey: #353535;\n        --darkGrey: #1c1c1c;\n        --fontSuperBig: 2.5rem;\n        --fontBig: 1.5rem;\n        --fontMed: 1.2rem;\n        --fontSmall: 1rem;\n    }\n    *{\n        box-sizing: border-box;\n        font-family: 'Abel', sans-serif;\n    }\n    body{\n        margin: 0;\n        padding: 0;\n        h1{\n            font-size: 2rem;\n            font-weight: 600;\n            color: var(--white);\n        }\n        h3{\n            font-size: 1rem;\n            font-weight: 600;\n        }\n        p{\n            font-size: 1rem;\n            color: var(--white);\n        }\n    }\n`;","import React from \"react\";\n\n//routing\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\n\n//Components\nimport Header from \"./components/Header\";\nimport Home from \"./components/Home\";\nimport Movie from \"./components/Movie\";\nimport NotFound from \"./components/NotFound\";\n\n//styles\nimport { GlobalStyle } from \"./GlobalStyle\";\n\nconst App = () => (\n  <Router>{/* rodeamos la aplicación entera en tags Router para poder usar react routing */}\n     <Header /> {/*el header se queda fuera porque va a ser mostrado en todas las páginas */}\n\n    <Routes>\n      <Route path='/' element={<Home />} />\n\n      <Route path='/:movieId'  element={<Movie/>} />\n\n      <Route path='/*' element={<NotFound/>} /> {/* el asterisco indica que, cuando la ruta no exista, hará fallback hacia ésta página */}\n    </Routes>\n\n    \n    <GlobalStyle />\n  \n  </Router>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}